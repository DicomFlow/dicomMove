<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd">
    <!-- ========================= Start of PERSISTENCE DEFINITIONS ========================= -->
    <context:annotation-config />
    <!-- DataSource Definition -->
    <bean id="pacsDataSource"
      	class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName">
			<value>BD_PACS_DRIVER</value>
		</property>
		<property name="url">
			<value>BD_PACS_URL</value>
		</property>
		<property name="username">
			<value>BD_PACS_USERNAME</value>
		</property>
		<property name="password">
			<value>BD_PACS_PASSWORD</value>
		</property>
	</bean>
	
	<bean id="dicomflowDataSource"
      	class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName">
			<value>BD_DICOMFLOW_DRIVER</value>
		</property>
		<property name="url">
			<value>BD_DICOMFLOW_URL</value>
		</property>
		<property name="username">
			<value>BD_DICOMFLOW_USERNAME</value>
		</property>
		<property name="password">
			<value>BD_DICOMFLOW_PASSWORD</value>
		</property>
	</bean>
    <!-- Hibernate SessionFactory Definition -->
    <bean id="pacsSessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="annotatedClasses">
            <list>
          		<value>INSTANCE_BEAN_CLASS</value>
                <value>PATIENT_BEAN_CLASS</value>
                <value>SERIES_BEAN_CLASS</value>
                <value>STUDY_BEAN_CLASS</value>
            </list>
        </property>
                
        <property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">BD_PACS_DIALECT_CLASS</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.bytecode.use_reflection_optimizer">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.HashtableCacheProvider</prop>
			</props>
		</property>	
        
        <property name="dataSource">
            <ref bean="pacsDataSource"/>
        </property>
    </bean>
    
    <bean id="dicomflowSessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="annotatedClasses">
            <list>
                <value>br.ufpb.dicomflow.bean.Access</value>
                <value>br.ufpb.dicomflow.bean.RequestService</value>
                <value>br.ufpb.dicomflow.bean.RequestServiceAccess</value>
                <value>br.ufpb.dicomflow.bean.StorageService</value>
                <value>br.ufpb.dicomflow.bean.StorageServiceAccess</value>
                <value>br.ufpb.dicomflow.bean.ServicePermission</value>                              
            </list>
        </property>
                
      <property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">BD_DICOMFLOW_DIALECT_CLASS</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.bytecode.use_reflection_optimizer">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.HashtableCacheProvider</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>	
        
        <property name="dataSource">
            <ref bean="dicomflowDataSource"/>
        </property>
    </bean>
    <bean id="pacsHibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate"> 
        <property name="sessionFactory"><ref bean="pacsSessionFactory"/></property> 
        <property name="jdbcExceptionTranslator"><ref bean="pacsJdbcExceptionTranslator"/></property> 
    </bean>
    
    <bean id="dicomflowHibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate"> 
        <property name="sessionFactory"><ref bean="dicomflowSessionFactory"/></property> 
        <property name="jdbcExceptionTranslator"><ref bean="dicomflowJdbcExceptionTranslator"/></property> 
    </bean> 
    
    <bean id="pacsPersistentService" class="PACS_PERSISTENT_SERVICE_CLASS">
        <property name="hibernateTemplate"><ref bean="pacsHibernateTemplate"/></property> 
    </bean>
    
    <bean id="persistentService" class="br.ufpb.dicomflow.service.PersistentService">
        <property name="hibernateTemplate"><ref bean="dicomflowHibernateTemplate"/></property> 
    </bean>
    <bean id="pacsJdbcExceptionTranslator" class="org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator"> 
        <property name="dataSource">
            <ref bean="pacsDataSource"/>
        </property> 
    </bean>
    
    <bean id="dicomflowJdbcExceptionTranslator" class="org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator"> 
        <property name="dataSource">
            <ref bean="dicomflowDataSource"/>
        </property> 
    </bean>
    
    <bean id="mailAuthenticator" class="br.ufpb.dicomflow.integrationAPI.mail.impl.SMTPAuthenticator" >
        <constructor-arg type="java.lang.String" value="USER_MAIL"/>
        <constructor-arg type="java.lang.String" value="USER_PASSWORD"/>
    </bean>
    <bean id="mailHeadBuilder" class="br.ufpb.dicomflow.integrationAPI.mail.impl.SMTPHeadBuilder">
        <property name="from">
            <value>USER_MAIL</value>
        </property>
        <property name="domain">
            <value>DOMAIN_URL</value>
        </property>
    </bean>
    <bean id="mailContentBuilder" class="br.ufpb.dicomflow.integrationAPI.mail.impl.SMTPContentBuilder">
    </bean>
    <bean id="urlGenerator" class="br.ufpb.dicomflow.service.UrlGenerator">
    	<property name="host">
            <value>DOMAIN_URL</value>
        </property>
        <property name="port">
            <value>DOMIAN_PORT</value>
        </property>
        <property name="context">
            <value>DOMAIN_APP_CONTEXT_NAME</value>
        </property>
         <property name="protocol">
            <value>DOMAIN_PROTOCOL</value>
        </property>
    </bean> 
    
    <bean id="messageService" class="br.ufpb.dicomflow.service.MessageService"> 
        <property name="mailAuthenticator">
            <ref bean="mailAuthenticator"/>
        </property> 
        <property name="mailHeadBuilder">
            <ref bean="mailHeadBuilder"/>
        </property>
        <property name="mailContentBuilder">
            <ref bean="mailContentBuilder"/>
        </property>
        <property name="urlGenerator">
            <ref bean="urlGenerator"/>
        </property>
        <property name="propertiesConfigPath">
			<value>MESSAGE_PROPERTIES_CONFIG_FILE</value>
		</property>
		<property name="maxAttempts">
			<value>3</value>
		</property>
		<property name="messageValidity">
			<value>600000</value>
		</property>
    </bean>
    
    <bean id="fileService" class="br.ufpb.dicomflow.service.FileService"> 
        <property name="archivePath">
            <value>PACS_ARCHIVE_PATH</value>
        </property>
        <property name="eat">
            <value>PACS_ENTITY_APPLICATION_TITLE</value>
        </property>
        <property name="host">
            <value>PACS_ENTITY_APPLICATION_HOST</value>
        </property>
        <property name="port">
            <value>PACS_ENTITY_APPLICATION_PORT</value>
        </property>
        <property name="extractDir">
            <value>RECEIVED_FILES_EXTRACT_DIR</value>
        </property>
    </bean>
    
    <bean id="certificateService" class="br.ufpb.dicomflow.service.CertificateService"> 
    	<property name="keystore">
			<value>KEYSTORE_FILE</value>
		</property>
		<property name="keystorePass">
			<value>KEYSTORE_PASSWORD</value>
		</property>
		<property name="keyAlias">
			<value>KEYSTORE_KEY_ALIAS</value>
		</property>
		<property name="keyPass">
			<value>KEYSTORE_KEY_PASSWORD</value>
		</property>
    </bean>
    
    <bean id="findAccessJob" class="br.ufpb.dicomflow.job.FindAccesses"> 
        <property name="accessConfigFile">
			<value>ACCESSES_PROPERTIES_CONFIG_FILE</value>
		</property>
    </bean>
    <bean id="findAccessJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	    <property name="targetObject" ref="findAccessJob"/>
	    <property name="targetMethod" value="execute"/>
	    <property name="concurrent" value="false"/>
	</bean>
	<bean id="findAccessCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
	    <property name="jobDetail" ref="findAccessJobDetail"/>
	    <property name="cronExpression" value="0 * * * * ?"/>
	</bean>
    
    <bean id="sendCertificatesJob" class="br.ufpb.dicomflow.job.SendCertificates"/>
    <bean id="sendCertificatesJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	    <property name="targetObject" ref="sendCertificatesJob"/>
	    <property name="targetMethod" value="execute"/>
	    <property name="concurrent" value="false"/>
	</bean>
	<bean id="sendCertificatesCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
	    <property name="jobDetail" ref="sendCertificatesJobDetail"/>
	    <property name="cronExpression" value="0 * * * * ?"/>
	</bean>
	
	<bean id="findCertificatesJob" class="br.ufpb.dicomflow.job.FindCertificates"/>
    <bean id="findCertificatesJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	    <property name="targetObject" ref="findCertificatesJob"/>
	    <property name="targetMethod" value="execute"/>
	    <property name="concurrent" value="false"/>
	</bean>
	<bean id="findCertificatesCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
	    <property name="jobDetail" ref="findCertificatesJobDetail"/>
	    <property name="cronExpression" value="0 * * * * ?"/>
	</bean>
	
	<bean id="verifyCertificateResultJob" class="br.ufpb.dicomflow.job.VerifyCertificateResult"/>
    <bean id="verifyCertificateResultJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	    <property name="targetObject" ref="verifyCertificateResultJob"/>
	    <property name="targetMethod" value="execute"/>
	    <property name="concurrent" value="false"/>
	</bean>
	<bean id="verifyCertificateResultCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
	    <property name="jobDetail" ref="verifyCertificateResultJobDetail"/>
	    <property name="cronExpression" value="0 * * * * ?"/>
	</bean>
	
	<bean id="verifyCertificateConfirmJob" class="br.ufpb.dicomflow.job.VerifyCertificateConfirm"/>
    <bean id="verifyCertificateConfirmJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	    <property name="targetObject" ref="verifyCertificateConfirmJob"/>
	    <property name="targetMethod" value="execute"/>
	    <property name="concurrent" value="false"/>
	</bean>
	<bean id="verifyCertificateConfirmCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
	    <property name="jobDetail" ref="verifyCertificateConfirmJobDetail"/>
	    <property name="cronExpression" value="0 * * * * ?"/>
	</bean>
	
	<bean id="prepareStoragesJob" class="br.ufpb.dicomflow.job.PrepareStorages"/>
    <bean id="prepareStoragesJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	    <property name="targetObject" ref="prepareStoragesJob"/>
	    <property name="targetMethod" value="execute"/>
	    <property name="concurrent" value="false"/>
	</bean>
	<bean id="prepareStoragesCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
	    <property name="jobDetail" ref="prepareStoragesJobDetail"/>
	    <property name="cronExpression" value="0 * * * * ?"/>
	</bean>
	
	<bean id="sendStoragesJob" class="br.ufpb.dicomflow.job.SendStorages"/>
    <bean id="sendStoragesJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	    <property name="targetObject" ref="sendStoragesJob"/>
	    <property name="targetMethod" value="execute"/>
	    <property name="concurrent" value="false"/>
	</bean>
	<bean id="sendStoragesCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
	    <property name="jobDetail" ref="sendStoragesJobDetail"/>
	    <property name="cronExpression" value="0 * * * * ?"/>
	</bean>
	
	<bean id="findStoragesJob" class="br.ufpb.dicomflow.job.FindStorages"/>
    <bean id="findStoragesJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	    <property name="targetObject" ref="findStoragesJob"/>
	    <property name="targetMethod" value="execute"/>
	    <property name="concurrent" value="false"/>
	</bean>
	<bean id="findStoragesCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
	    <property name="jobDetail" ref="findStoragesJobDetail"/>
	    <property name="cronExpression" value="0 * * * * ?"/>
	</bean>
	
	<bean id="verifyStorageResultsJob" class="br.ufpb.dicomflow.job.VerifyStorageResults"/>
    <bean id="verifyStorageResultsJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	    <property name="targetObject" ref="verifyStorageResultsJob"/>
	    <property name="targetMethod" value="execute"/>
	    <property name="concurrent" value="false"/>
	</bean>
	<bean id="verifyStorageResultsCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
	    <property name="jobDetail" ref="verifyStorageResultsJobDetail"/>
	    <property name="cronExpression" value="0 * * * * ?"/>
	</bean>
	
	<bean id="storeStudiesJob" class="br.ufpb.dicomflow.job.StoreStudies"/>
    <bean id="storeStudiesJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	    <property name="targetObject" ref="storeStudiesJob"/>
	    <property name="targetMethod" value="execute"/>
	    <property name="concurrent" value="false"/>
	</bean>
	<bean id="storeStudiesCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
	    <property name="jobDetail" ref="storeStudiesJobDetail"/>
	    <property name="cronExpression" value="0 * * * * ?"/>
	</bean>
	
	<bean id="storePendingStudiesJob" class="br.ufpb.dicomflow.job.StorePendingStudies"/>
    <bean id="storePendingStudiesJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	    <property name="targetObject" ref="storePendingStudiesJob"/>
	    <property name="targetMethod" value="execute"/>
	    <property name="concurrent" value="false"/>
	</bean>
	<bean id="storePendingStudiesCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
	    <property name="jobDetail" ref="storePendingStudiesJobDetail"/>
	    <property name="cronExpression" value="0 * * * * ?"/>
	</bean>
	
	<bean id="prepareRequestsJob" class="br.ufpb.dicomflow.job.PrepareRequests"/>
    <bean id="prepareRequestsJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	    <property name="targetObject" ref="prepareRequestsJob"/>
	    <property name="targetMethod" value="execute"/>
	    <property name="concurrent" value="false"/>
	</bean>
	<bean id="prepareRequestsCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
	    <property name="jobDetail" ref="prepareRequestsJobDetail"/>
	    <property name="cronExpression" value="0 * * * * ?"/>
	</bean>
	
	<bean id="sendRequestsJob" class="br.ufpb.dicomflow.job.SendRequests"/>
    <bean id="sendRequestsJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	    <property name="targetObject" ref="sendRequestsJob"/>
	    <property name="targetMethod" value="execute"/>
	    <property name="concurrent" value="false"/>
	</bean>
	<bean id="sendRequestsCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
	    <property name="jobDetail" ref="sendRequestsJobDetail"/>
	    <property name="cronExpression" value="0 * * * * ?"/>
	</bean>
	
	<bean id="verifyRequestResultsJob" class="br.ufpb.dicomflow.job.VerifyRequestResults"/>
    <bean id="verifyRequestResultsJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	    <property name="targetObject" ref="verifyRequestResultsJob"/>
	    <property name="targetMethod" value="execute"/>
	    <property name="concurrent" value="false"/>
	</bean>
	<bean id="verifyRequestResultsCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
	    <property name="jobDetail" ref="verifyRequestResultsJobDetail"/>
	    <property name="cronExpression" value="0 * * * * ?"/>
	</bean>
	
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
	    <property name="triggers">
	        <list>
	        	<!-- JOBS PARA ATUALIZACAO DE ACCESSES E SERVICE PERMISSIONS 
            	<ref bean="findAccessCronTrigger"/> -->
	        
	            <!-- JOBS PARA ENVIO E RECEBIMENTO DE CERTIFICADOS 
            	<ref bean="sendCertificatesCronTrigger"/>
                <ref bean="findCertificatesCronTrigger"/>
                <ref bean="verifyCertificateResultCronTrigger"/> 
                <ref bean="verifyCertificateConfirmCronTrigger"/> -->
                
               
                <!-- JOBS PARA ENVIO DE STORAGE SAVE 
                <ref bean="prepareStoragesCronTrigger"/>
                <ref bean="sendStoragesCronTrigger"/>
                <ref bean="verifyStorageResultsCronTrigger"/> -->
                
                <!-- JOBS PARA RECEBIMENTO DE STORAGE SAVE 
                <ref bean="findStoragesCronTrigger"/>
                <ref bean="storeStudiesCronTrigger"/>
                <ref bean="storePendingStudiesCronTrigger"/> -->
                
                <!-- JOBS PARA ENVIO DE REQUEST PUT 
                <ref bean="prepareRequestsCronTrigger"/>
                <ref bean="sendRequestsCronTrigger"/>
                <ref bean="verifyRequestResultsCronTrigger"/> -->
	        </list>
	    </property>
	</bean>
    
</beans>